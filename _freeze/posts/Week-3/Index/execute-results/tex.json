{
  "hash": "1232ea619f76f00f336bb4e24b458c9c",
  "result": {
    "markdown": "---\ntitle: \"Week 3 Assignment\"\nauthor: \"Emmanel Pascual\"\nformat:\n  pdf:\n    toc: true\n    toc-depth: 2\ndate: \"2023-02-21\"\ncategories: [Data, Tips, Tricks]\nimage: \"cheatCode.avif\"\nexecute: \n  jupyter: python3 \n---\n\n\n1.  Be able to make a new .qmd document Sign top left Create new Quarto Document\n\n-   Save \\> Find the posts -\\> Only use Source Editor -\\>\n\n-   Files tab make Quarto Doc it makes it in the folder you're in and they're blank\n\n-   Top level, it gives reference to what the post is about\n\n2.  Be able to render a .qmd document!\n\n-   Yes We can render the whole website too! Render a page from the console using commands.\n\n3.  Explain the difference between the source editor view and visual editor view in Rstudio\n\n-   Source View is plain test (ASCII character will be expressed exactly as it is in the source view)\n\n-   Visual View Renders the plain text and interprets it as Markdown text, it gives the text formatting text instead of the plain test.\n\n4.  Be able to insert simple markdown plain text (headers, lists, paragraphs), and render the document.\n\nHeaders:\n\n# Header 1\n\n## Header 2\n\n### Header 3\n\n#### Header 4\n\n##### Header 5\n\n###### Header 6\n\nThe smaller we get the smaller the header will end up being.\n\nLists:\n\n*-* unordered list + sub-item 1 + sub-item 2 - sub-sub-item 1\n\n1.  ordered list\n2.  item 2\n    i)  sub-item 1\n        A.  sub-sub-item 1 Paragraphs:\n\n*italics* and **bold**\n\nPlain text End a line with two spaces to start a new paragraph. *italics* and *italics* **bold** and **bold** superscript^2^ ~~strikethrough~~\n\nParagraphs:\n\n5.  Be aware of resources to help you learn more about markdown options.\n\nhttps://quarto.org/docs/authoring/markdown-basics.html\n\n6.  Be able to insert an R code chunk, and show the output in the rendered document.\n\n-   macro for quick insert ctrl - alt - I\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  summonMe <- c(1, 2, 3 , 4:6)\n  summonMe\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1 2 3 4 5 6\n```\n:::\n:::\n\n\n7.  Running R code chunks in a qmd\n\n-   pressing play\n-   copy/paste into console\n-   highlight then command-enter (mac)\n-   precedence issues (first to last)\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2023-12-25\")\n```\n:::\n\n\n8.  Be aware of R code chunk options, and how to use eval, messages, error, warning, and echo.\n\nhttps://quarto.org/docs/computations/execution-options.html\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"https://quarto.org/docs/computations/execution-options.html\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"https://quarto.org/docs/computations/execution-options.html\\n\"\n```\n:::\n:::\n\n\n\n9.  Be able to set code chunk options per chunk, and/or for the whole document. Understand rules for precedence (which options will apply if both are set.)\n\n10. Write inline r code.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- \"Emily\"\nage <- 36\ntoday <- Sys.Date()\nchristmas <- as.Date(\"2023-12-25\")\n```\n:::\n\n\n\n\n\"My name is Emily and I am 36 years old. It is 267 days until Christmas, which is my favourite holiday.\"\n\n11. Explain how the rendering environment is different from the Rstudio environment.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(\"The differences between the rendering eviornment and the Rstudio enviornment are the assignments of the variables. We can either define it outside or inside this specific code chunk.\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"The differences between the rendering eviornment and the Rstudio enviornment are the assignments of the variables. We can either define it outside or inside this specific code chunk.\"\n```\n:::\n\n```{.r .cell-code}\nb <- 10\nc <- 35 \n\na <- c+b \n\na\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 45\n```\n:::\n:::\n\n\n\n12. Be aware of more advanced quarto options for html documents, and try some of the options.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}