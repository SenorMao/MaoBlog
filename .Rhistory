group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
library(tidyverse)
library(dplyr)
bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')
# Read in the data
bob_ross <- read_csv(
"https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
)
glimpse(bob_ross)
# The first column doesn't contain data that we need, so we can remove it
bob_ross <- select(bob_ross, -1)
# Several columns refer to presence/absence of named colors.
bob_ross <- bob_ross |>
mutate(
across(Black_Gesso:Alizarin_Crimson, as.logical)
)
library(dplyr)
library(ggplot2)
# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
bob_ross_color_counts <- bob_ross %>%
group_by(season, color) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count, fill = color)) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count, fill = colors())) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count, fill = colors)) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
library(tidyverse)
library(dplyr)
bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')
# Read in the data
bob_ross <- read_csv(
"https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
)
glimpse(bob_ross)
# The first column doesn't contain data that we need, so we can remove it
bob_ross <- select(bob_ross, -1)
# Several columns refer to presence/absence of named colors.
bob_ross <- bob_ross |>
mutate(
across(Black_Gesso:Alizarin_Crimson, as.logical)
)
library(dplyr)
library(ggplot2)
# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count)) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
library(tidyverse)
library(dplyr)
bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')
# Read in the data
bob_ross <- read_csv(
"https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
)
glimpse(bob_ross)
# The first column doesn't contain data that we need, so we can remove it
bob_ross <- select(bob_ross, -1)
# Several columns refer to presence/absence of named colors.
bob_ross <- bob_ross |>
mutate(
across(Black_Gesso:Alizarin_Crimson, as.logical)
)
library(dplyr)
library(ggplot2)
# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count, fill = color )) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
glimpse(bob_ross_top_color)
library(tidyverse)
library(dplyr)
bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')
# Read in the data
bob_ross <- read_csv(
"https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
)
glimpse(bob_ross)
# The first column doesn't contain data that we need, so we can remove it
bob_ross <- select(bob_ross, -1)
# Several columns refer to presence/absence of named colors.
bob_ross <- bob_ross |>
mutate(
across(Black_Gesso:Alizarin_Crimson, as.logical)
)
library(dplyr)
library(ggplot2)
# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count)
glimpse(bob_ross_top_color)
# Create a bar plot
ggplot(bob_ross_top_color, aes(x = season, y = color_count, fill = colors )) +
geom_bar(stat = "identity") +
labs(x = "Season", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal()
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, color) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count) %>%
ungroup()
# Create separate plots for each season
ggplot(bob_ross_top_color, aes(x = "", y = color_count, fill = color)) +
geom_bar(stat = "identity", width = 1) +
labs(x = "", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal() +
facet_wrap(~ season, nrow = 1) +
theme(legend.position = "none",
panel.spacing = unit(0.5, "lines"),
strip.text = element_text(size = 12, face = "bold", color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = color), color = "black", size = 5, nudge_y = 5)
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count) %>%
ungroup()
# Create separate plots for each season
ggplot(bob_ross_top_color, aes(x = "", y = color_count, fill = colors)) +
geom_bar(stat = "identity", width = 1) +
labs(x = "", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal() +
facet_wrap(~ season, nrow = 1) +
theme(legend.position = "none",
panel.spacing = unit(0.5, "lines"),
strip.text = element_text(size = 12, face = "bold", color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = color), color = "black", size = 5, nudge_y = 5)
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count) %>%
ungroup()
# Create separate plots for each season
ggplot(bob_ross_top_color, aes(x = "", y = color_count, fill = colors)) +
geom_bar(stat = "identity", width = 1) +
labs(x = "", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal() +
facet_wrap(~ season, nrow = 1) +
theme(legend.position = "none",
panel.spacing = unit(0.5, "lines"),
strip.text = element_text(size = 12, face = "bold", color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = color), color = "black", size = 5, nudge_y = 5)
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count) %>%
ungroup()
# Create separate plots for each season
ggplot(bob_ross_top_color, aes(x = colors(), y = color_count, fill = colors)) +
geom_bar(stat = "identity", width = 1) +
labs(x = "", y = "Color Count", title = "Most Popular Color in Each Season") +
theme_minimal() +
facet_wrap(~ season, nrow = 1) +
theme(legend.position = "none",
panel.spacing = unit(0.5, "lines"),
strip.text = element_text(size = 12, face = "bold", color = "black"),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank()) +
geom_text(aes(label = color), color = "black", size = 5, nudge_y = 5)
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(color) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create separate plots for each season
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(colors) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create a bar plot with a colorful palette
ggplot(color_counts, aes(x = color, y = count, fill = color)) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$color))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(colors) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create a bar plot with a colorful palette
ggplot(color_counts, aes(x = colors, y = count, fill = colors)) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$color))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
ggplot(color_counts, aes(x = colors, y = count)) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$color))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
# Create a bar plot with a colorful palette
ggplot(color_counts, aes(x = colors, y = count, fill = colors)) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$color))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
# Create a bar plot with a colorful palette
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(title) %>%
summarise(count = n()) %>%
arrange(desc(count))
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(painting_title) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create a bar plot with a colorful palette
ggplot(color_counts, aes(x = painting_title, y = count, fill = title)) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$title))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
library(dplyr)
library(ggplot2)
# Calculate the count of each color by season
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
# Keep only the top color for each season
bob_ross_top_color <- bob_ross_color_counts %>%
group_by(season) %>%
slice_max(color_count) %>%
ungroup()
# Create separate plots for each season
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(colors) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create a bar plot with a colorful palette
library(dplyr)
library(ggplot2)
# Filter the data for Season 1
bob_ross_season1 <- bob_ross %>%
filter(season == 1)
# Count the frequency of each color in Season 1
color_counts <- bob_ross_season1 %>%
group_by(painting_title) %>%
summarise(count = n()) %>%
arrange(desc(count))
# Create a bar plot with a colorful palette
ggplot(color_counts, aes(x = painting_title, y = count, fill = colors(distinct = FALSE))) +
geom_bar(stat = "identity") +
labs(x = "Color", y = "Frequency", title = "Color Frequency in Season 1") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(color_counts$title))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1),
legend.position = "none")
library(tidyverse)
library(dplyr)
bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')
# Read in the data
bob_ross <- read_csv(
"https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
)
glimpse(bob_ross)
# The first column doesn't contain data that we need, so we can remove it
bob_ross <- select(bob_ross, -1)
# Several columns refer to presence/absence of named colors.
bob_ross <- bob_ross |>
mutate(
across(Black_Gesso:Alizarin_Crimson, as.logical)
)
library(dplyr)
library(ggplot2)
# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
group_by(season) %>%
summarise(avg_colors = mean(num_colors))
# Create a bar plot
ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
geom_bar(stat = "identity", fill = "steelblue") +
labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
theme_minimal() +
scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
bob_ross_color_counts <- bob_ross %>%
group_by(season, colors) %>%
summarise(color_count = n()) %>%
arrange(season, desc(color_count))
library(tidyverse)
library(ggplot2)
library(dplyr)
data <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk_reference.csv")
# Create a data visualization
ggplot(data, aes(x = animal_sex, fill = animal_reproductive_condition)) +
geom_bar() +
labs(x = "Gender", y = "Count", title = "Cats: Gender and Spayed Status") +
scale_fill_discrete(name = "Spayed")+
scale_y_continuous(breaks = seq(0 , 70 , by = 2) )
ggplot(data, aes(x = animal_sex, y = hrs_indoors, color = animal_reproductive_condition)) +
geom_boxplot() +
labs(x = "Gender", y = "Time Outside", title = "Cats: Time Outside by Gender and Spayed Status") +
scale_fill_discrete(name = "Spayed")+
scale_y_continuous(breaks = seq(0, 24, by = 2), limits = c(0, 24)) +
theme(axis.text.y = element_text(size = 10))
cats_uk <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk.csv')
# Read the cats_uk dataset
cats_uk <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk.csv')
# Create a histogram of ground speed
