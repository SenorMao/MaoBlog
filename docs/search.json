[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this blog"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MaoBlog",
    "section": "",
    "text": "Tips and Tricks\n\n\n\n\n\n\n\nData\n\n\nTips\n\n\nTricks\n\n\n\n\n\n\n\n\n\n\n\nFeb 9, 2023\n\n\nEmmanel Pascual\n\n\n\n\n\n\n  \n\n\n\n\nDatavis Example Week 1\n\n\n\n\n\n\n\nRLearning\n\n\nCode\n\n\nData\n\n\n\n\n\n\n\n\n\n\n\nFeb 6, 2023\n\n\nEmmanuel Pascual\n\n\n\n\n\n\n  \n\n\n\n\nLearning RStudio\n\n\n\n\n\n\n\nRLearning\n\n\nCode\n\n\nData\n\n\n\n\n\n\n\n\n\n\n\nJan 29, 2023\n\n\nEmmanuel Pascual\n\n\n\n\n\n\n  \n\n\n\n\nObjective 1\n\n\n\n\n\n\n\nUnderstanding what is going on.\n\n\n\n\n\n\n\n\n\n\n\nJan 29, 2023\n\n\nEmmanel Pascual\n\n\n\n\n\n\n  \n\n\n\n\nThis is an Image\n\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\n\n\nJan 26, 2023\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/datavis1/Datavis_example.html",
    "href": "posts/datavis1/Datavis_example.html",
    "title": "Datavis Example Week 1",
    "section": "",
    "text": "How do various countries vote in the United Nations General Assembly, how have their voting patterns evolved throughout time, and how similarly or differently do they view certain issues? Answering these questions (at a high level) is the focus of this analysis.\n\n\nWe will use the tidyverse, lubridate, and scales packages for data wrangling and visualization, and the DT package for interactive display of tabular output, and the unvotes package for the data.\n\nlibrary(tidyverse)\nlibrary(lubridate)\nlibrary(scales)\nlibrary(DT)\nlibrary(unvotes)\n\n\n\n\nThe data we’re using originally come from the unvotes package. In the chunk below we modify the data by joining the various data frames provided in the package to help you get started with the analysis.\n\nunvotes <- un_votes %>%\n  inner_join(un_roll_calls, by = \"rcid\") %>%\n  inner_join(un_roll_call_issues, by = \"rcid\")\n\nWarning in inner_join(., un_roll_call_issues, by = \"rcid\"): Each row in `x` is expected to match at most 1 row in `y`.\nℹ Row 382 of `x` matches multiple rows.\nℹ If multiple matches are expected, set `multiple = \"all\"` to silence this\n  warning."
  },
  {
    "objectID": "posts/datavis1/Datavis_example.html#un-voting-patterns",
    "href": "posts/datavis1/Datavis_example.html#un-voting-patterns",
    "title": "Datavis Example Week 1",
    "section": "UN voting patterns",
    "text": "UN voting patterns\nLet’s create a data visualization that displays how the voting record of the UK & NI changed over time on a variety of issues, and compares it to two other countries: US and Turkey.\nWe can easily change which countries are being plotted by changing which countries the code above filters for. Note that the country name should be spelled and capitalized exactly the same way as it appears in the data. See the Appendix for a list of the countries in the data.\n\nunvotes %>%\n  filter(country %in% c(\"Mauritius\", \"Brunei\", \"Bahamas\" , \"kazakhstan\")) %>%\n  mutate(year = year(date)) %>%\n  group_by(country, year, issue) %>%\n  summarize(percent_yes = mean(vote == \"yes\")) %>%\n  ggplot(mapping = aes(x = year, y = percent_yes, color = country)) +\n  geom_point(alpha = 0.4) +\n  geom_smooth(method = \"loess\", se = FALSE) +\n  facet_wrap(~issue) +\n  scale_y_continuous(labels = percent) +\n  labs(\n    title = \"Percentage of 'Yes' votes in the UN General Assembly\",\n    subtitle = \"1946 to 2019\",\n    y = \"% Yes\",\n    x = \"Year\",\n    color = \"Country\"\n  )"
  },
  {
    "objectID": "posts/datavis1/Datavis_example.html#references",
    "href": "posts/datavis1/Datavis_example.html#references",
    "title": "Datavis Example Week 1",
    "section": "References",
    "text": "References\n\nDavid Robinson (2017). unvotes: United Nations General Assembly Voting Data. R package version 0.2.0.\nErik Voeten “Data and Analyses of Voting in the UN General Assembly” Routledge Handbook of International Organization, edited by Bob Reinalda (published May 27, 2013).\nMuch of the analysis has been modeled on the examples presented in the unvotes package vignette."
  },
  {
    "objectID": "posts/datavis1/Datavis_example.html#appendix",
    "href": "posts/datavis1/Datavis_example.html#appendix",
    "title": "Datavis Example Week 1",
    "section": "Appendix",
    "text": "Appendix\nBelow is a list of countries in the dataset:"
  },
  {
    "objectID": "posts/myNewPost/index.html",
    "href": "posts/myNewPost/index.html",
    "title": "Learning RStudio",
    "section": "",
    "text": "This is a post with executable code.\n\n10 + 3 \n\n[1] 13"
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Objective 1",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/Tips & Tricks/index.html",
    "href": "posts/Tips & Tricks/index.html",
    "title": "Tips and Tricks",
    "section": "",
    "text": "Here Comes The Great Tips and Tricks!\n?Class = Show Key information on functions you have unpacked already ??Class = Show Key Information On Functions usage and arguments if you don’t have it.\n###Mean and Counting Tricks##\n1:5 is the same as 1,2,3,4,5 rep(x , y) x = Value , Y = instances , Rep = Repetition\n\nYay <- rep(4 , 6)\nYay\n\n[1] 4 4 4 4 4 4\n\nvector1 <- c(1 , 2, 3 , 4, 5, 6 )\nvector2 <- c((8:10))\nvector1\n\n[1] 1 2 3 4 5 6\n\nvector2 \n\n[1]  8  9 10\n\n\nc() = combines values into a vector or a list (VECTOR) C( 1 , 2 , 3 )\n\nMy_number <- c(1, 92, 182)\nMy_number\n\n[1]   1  92 182\n\n\"We can Change the Vector using this My_number[2] <- 'two' \"\n\n[1] \"We can Change the Vector using this My_number[2] <- 'two' \"\n\nMy_number[2] <- \"two\"\n\"Lets see, background realness darling\" \n\n[1] \"Lets see, background realness darling\"\n\nMy_number\n\n[1] \"1\"   \"two\" \"182\"\n\n\"Remember when we add quotation marks to any Vectors the entire range becomes Strings & or Characters\"\n\n[1] \"Remember when we add quotation marks to any Vectors the entire range becomes Strings & or Characters\"\n\n\nas.numeric() , as.character()\n\n\"Since R is an interesting language we learned that it does not typecast nor conatonate\" \n\n[1] \"Since R is an interesting language we learned that it does not typecast nor conatonate\"\n\nas.numeric(My_number)\n\nWarning: NAs introduced by coercion\n\n\n[1]   1  NA 182\n\n\"See if we have the string two instead of 2 an interger it doesn't work lets edit that out! \"\n\n[1] \"See if we have the string two instead of 2 an interger it doesn't work lets edit that out! \"\n\nMy_number[2] <- 2 \nas.numeric(My_number)\n\n[1]   1   2 182\n\n\"Huzzah we did it! \"\n\n[1] \"Huzzah we did it! \"\n\n\nMean(x, trim , na.rm) Trim\n\nnumbs <- 1:6\nmean(numbs)\n\n[1] 3.5\n\n\"Trim = Data cleaning process rTrim() is very confusing. What the hell.\"\n\n[1] \"Trim = Data cleaning process rTrim() is very confusing. What the hell.\"\n\nmean(numbs , .1 )\n\n[1] 3.5\n\n\nSample function is random selection Sample (x , size , replace = FALSE Prob = Rep (⅙ , 6) Everything Sample makes a selection it wants to know what the probability is thats when the REP function comes into play.\n\ndice <- c(1:6)\ndice\n\n[1] 1 2 3 4 5 6\n\nsample(dice, 6, replace = FALSE, prob = rep(1/6, 6))\n\n[1] 2 1 5 4 3 6"
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "This is an Image",
    "section": "",
    "text": "Isn’t this a rather interesting way to add pictures, you just need to drag and drop?\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  }
]