{"title":"Data Relations","markdown":{"yaml":{"title":"Data Relations","author":"Emmanuel Pascual","date":"4-18-2023"},"headingText":"What does dplyr mutate do","containsRefs":false,"markdown":"\n\n```{r}\nlibrary(tidyverse)\n1:5\ncustomers <- tibble(\n  id = 1:5,\n  city = c(\"Port Ellen\", \"Dufftown\", NA, \"Aberlour\", \"Tobermory\"), \n  Postcode  = c(\"PA42 7DU\", \"AB55 4DH\", NA, \"AB38 7RY\", \"PA75 6NR\")\n  \n)\norders <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n\n```\n\n\n```{r}\norders_B <- tibble(\n  id = c(2, 3, 4, 4, 5, 5, 6, 6, 7),\n  items = c(10, 18, 21, 23, 9, 11, 11, 12, 3)\n)\n# add a new column and \norders_B %>%\n          mutate(satisfaction = NA,\n                 number = 1:9)\n\n##reassign to keep it! \n orders_B <- orders_B %>%\n          mutate(satisfaction = NA,\n                 number = 1:9)\n \n###Make numbers into different data type \n orders_B %>% \n  mutate(numbers_as_strings = as.character(number))\n \n#You can even do MATHH! \n orders_B %>% \n  mutate(items_minus_id = items - id)\n \n\n\n```\n\n### SO MANY JOINS FROM LEFT TO RIGHT AND INNER AND EVERYHING!\n\nHere we will look at the two tables and merge the relevant information that we want this way we can draw some conclusions about the data such as how many times were packaged by Postcode, City, and ID number!\n\n![](images/left_join.png){width=\"219\" height=\"159\"}\n\n```{r}\n###left Join\ncustomers\norders\nleft_data <- left_join(customers, orders, by = \"id\")\nleft_data\n\n\nleft2_data <- left_join(orders, customers, by = \"id\")\n\n\n```\n\n![](images/right_join.png){width=\"233\"}\n\n```{r}\n##Right Join\n\ncustomers\norders\n\nright_data <- right_join(customers, orders, by = \"id\")\nright_data\n```\n\n![](images/inner_join.png){width=\"272\"}\n\n```{r}\n##Inner Join \ncustomers\norders\ninner_data <- inner_join(customers, orders, by = \"id\")\ninner_data\n```\n\n![](images/full_join.png){width=\"270\"}\n\n```{r}\n##FULL JOIN! ADD EVERYTHING! \nfull_data <- full_join(customers, orders, by = \"id\") \nfull_data #print data\n```\n\n## Dplyr Filter\n\nThis can be very useful when we want specific data to be within our data set in this scenario we are filtering out any values within the city and times columns = NA by using a Boolean variable to check.\n\n```{r}\nfull_data <- full_join(customers, orders, by = \"id\") #Creates a table where all units of data are brought together, the variables customer,orders, and labeled by ID\nfull_data #print data\n\nfull_data%>% \n  filter(Postcode == \"AB38 7RY\", #We want the value data point where postcode == AB38 7RY \n         items > 21) #And for our items to be greater than 21\n\n\n##This checks if a value is na \nfull_data %>% \n  filter( is.na(city) == TRUE |\n          is.na(items) == TRUE\n        )\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":true,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"mint","title-block-banner":true,"title":"Data Relations","author":"Emmanuel Pascual","date":"4-18-2023"},"extensions":{"book":{"multiFile":true}}}}}