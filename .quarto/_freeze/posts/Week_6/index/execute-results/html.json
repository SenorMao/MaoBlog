{
  "hash": "058b491a446ee5b5be4014e351ad4b8e",
  "result": {
    "markdown": "---\ntitle: \"Week_6\"\nauthor: \"Emmanuel Pascual\"\ndate: \"2023-02-06\"\ncategories: [RLearning, Code, Data]\nimage: \"dataPic.jpg\"\n---\n\n\nFor this Module we will be lookin at several tweets and making descriptive analysis' using R libraries:\n\n5.1\n\n\n\n\n\nDownload the data for this chapter (ncod_tweets.rds) tweets \\<- readRDS(\"ncod_tweets.rds\")\n\n5.2\n\n\n\nMake sure to save your data because there are systems in place to stop you from receiving new data constantly or too much data I forget.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets <- readRDS(\"data/ncod_tweets.rds\")\nsaveRDS(tweets, file = \"data/ncod_tweets.rds\")\n```\n:::\n\n\nWe only need to make a variable for this instance I will name it \"favorite_summary\"\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfavorite_summary <- summarise(tweets, # name of the data table\n                               mean_favs = mean(favorite_count),\n                               median_favs = median(favorite_count),\n                               min_favs = min(favorite_count),\n                               max_favs = max(favorite_count))\n\n    knitr::kable(favorite_summary) #print output , weird syntax man\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> mean_favs </th>\n   <th style=\"text-align:right;\"> median_favs </th>\n   <th style=\"text-align:right;\"> min_favs </th>\n   <th style=\"text-align:right;\"> max_favs </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 29.71732 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 22935 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nSimilar to GGplots we are able to add more and more categories of statistical analysis by adding more command for example:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfavourite_summary <- summarise(tweets,\n                               mean_favs = mean(favorite_count),\n                               median_favs = median(favorite_count),\n                               min_favs = min(favorite_count),\n                               max_favs = max(favorite_count),\n                               sd_favs = sd(favorite_count),\n                               mean_RTs = mean(retweet_count),\n                               median_RTs = median(retweet_count),\n                               min_RTs = min(retweet_count),\n                               max_RTs = max(retweet_count),\n                               sd_RTs = sd(favorite_count))\n\n    knitr::kable(favourite_summary)\n```\n\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> mean_favs </th>\n   <th style=\"text-align:right;\"> median_favs </th>\n   <th style=\"text-align:right;\"> min_favs </th>\n   <th style=\"text-align:right;\"> max_favs </th>\n   <th style=\"text-align:right;\"> sd_favs </th>\n   <th style=\"text-align:right;\"> mean_RTs </th>\n   <th style=\"text-align:right;\"> median_RTs </th>\n   <th style=\"text-align:right;\"> min_RTs </th>\n   <th style=\"text-align:right;\"> max_RTs </th>\n   <th style=\"text-align:right;\"> sd_RTs </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 29.71732 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 22935 </td>\n   <td style=\"text-align:right;\"> 329.9982 </td>\n   <td style=\"text-align:right;\"> 3.166632 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 2525 </td>\n   <td style=\"text-align:right;\"> 329.9982 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nTo create histograms we will be looking at the ggplot libary and below is an example histogram:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tweets, aes(x = favorite_count)) + \n  geom_histogram(bins = 25) + \n  scale_x_continuous(trans = \"pseudo_log\", \n                     breaks = c(0, 1, 10, 100, 1000, 10000))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\nThe \\$ operator:\n\nThis operator is a little nifty in the sense that it will isolate a specific data point that we need, For example let's look at the example code provided by Applied Data Skills:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweet_summary <- summarise(tweets,\n                               mean_favs = mean(favorite_count),\n                               median_favs = median(favorite_count),\n                               min_favs = min(favorite_count),\n                               max_favs = max(favorite_count),\n                               sd_favs = sd(favorite_count),\n                               mean_RTs = mean(retweet_count),\n                               median_RTs = median(retweet_count),\n                               min_RTs = min(retweet_count),\n                               max_RTs = max(retweet_count),\n                               sd_RTs = sd(favorite_count))\n\ntweet_summary$mean_favs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 29.71732\n```\n:::\n\n```{.r .cell-code}\ntweet_summary$sd_favs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 329.9982\n```\n:::\n\n```{.r .cell-code}\ntweet_summary$sd_RTs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 329.9982\n```\n:::\n:::\n\n\nOn the left side of \\$ we are referencing the table and the right side is the the item we are calling for observation. But we can actually use vectors to isolate a specific data point.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntweets$source[6] # select one observation\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Twitter for Android\"\n```\n:::\n\n```{.r .cell-code}\ntweets$display_text_width[c(10,15,20)] # select multiple with c()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1]  75 274  78\n```\n:::\n:::\n\n\nGROUPING! Using the grouping function we are able to select specific parts of these tables to create new tables!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n   tweets_grouped <- tweets %>%\n      group_by(verified)\n\n    verified <- tweets_grouped %>%\n      summarise(count = n(),\n                mean_favs = mean(favorite_count),\n                mean_retweets = mean(retweet_count)) %>%\n      ungroup()\n    verified\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 Ã— 4\n  verified count mean_favs mean_retweets\n  <lgl>    <int>     <dbl>         <dbl>\n1 FALSE    26676      18.4          1.83\n2 TRUE      1950     184.          21.5 \n```\n:::\n:::\n\n\nFilter and Mutate\n\nfilter(): keeps observations (rows) according to specified criteria, e.g., all values above 5, or all verified users. mutate(): creates new variables (columns), or overwrites existing ones.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}