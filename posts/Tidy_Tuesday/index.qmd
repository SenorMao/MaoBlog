---
title: "Tidy Tuesday"
author: "Me"
toc-title: Contents
toc: true
toc-depth: 2
date: "2023-02-21"
categories: [Week, Number, Three]
image: "Questions.jpg"
---

This is a substitute to my final! Hopefully these cute graphs showcase my ability to take a data-set and make some visualizations out of it. 

```{r}
library(tidyverse)
library(ggplot2)
library(dplyr)
data <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk_reference.csv")

# Create a data visualization
ggplot(data, aes(x = animal_sex, fill = animal_reproductive_condition)) +
  geom_bar() +
  labs(x = "Gender", y = "Count", title = "Cats: Gender and Spayed Status") +
  scale_fill_discrete(name = "Spayed")+
  scale_y_continuous(breaks = seq(0 , 70 , by = 2) )






ggplot(data, aes(x = animal_sex, y = hrs_indoors, color = animal_reproductive_condition)) +
  geom_boxplot() +
  labs(x = "Gender", y = "Time Outside", title = "Cats: Time Outside by Gender and Spayed Status") +
  scale_fill_discrete(name = "Spayed")+
  scale_y_continuous(breaks = seq(0, 24, by = 2), limits = c(0, 24)) +
  theme(axis.text.y = element_text(size = 10))

cats_uk <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk.csv')



# Read the cats_uk dataset
cats_uk <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-01-31/cats_uk.csv')

# Create a histogram of ground speed

```

```{r}
library(tidyverse)
library(dplyr)


bob_ross <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-21/bob_ross.csv')


# Read in the data
bob_ross <- read_csv(
  "https://raw.githubusercontent.com/jwilber/Bob_Ross_Paintings/master/data/bob_ross_paintings.csv",
) 

glimpse(bob_ross)

# The first column doesn't contain data that we need, so we can remove it

bob_ross <- select(bob_ross, -1)

# Several columns refer to presence/absence of named colors.

bob_ross <- bob_ross |> 
  mutate(
    across(Black_Gesso:Alizarin_Crimson, as.logical)
  )




library(dplyr)
library(ggplot2)

# Calculate the average number of colors per season
bob_ross_avg_colors <- bob_ross %>%
  group_by(season) %>%
  summarise(avg_colors = mean(num_colors))

# Create a bar plot
  ggplot(bob_ross_avg_colors, aes(x = season, y = avg_colors)) +
    geom_bar(stat = "identity", fill = "steelblue") +
    labs(x = "Season", y = "Average Number of Colors", title = "Average Number of Colors per Season") +
    theme_minimal() +
    scale_fill_manual(values = rainbow(length(bob_ross_avg_colors$season)))
  
  
  
  bob_ross_color_counts <- bob_ross %>%
  group_by(season, colors) %>%
  summarise(color_count = n()) %>%
  arrange(season, desc(color_count))


```

```{r}
drugs <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-14/drugs.csv')
# Required libraries
library(tidyverse)
library(readr)

# Read the dataset
drugs <- read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-03-14/drugs.csv')

# Count the number of drugs in each therapeutic area
therapeutic_counts <- drugs %>%
  group_by(therapeutic_area) %>%
  summarise(total_drugs = n()) %>%
  top_n(10, total_drugs) %>%
  arrange(desc(total_drugs))

# Create a prettier bar plot of the top 10 therapeutic areas
ggplot(therapeutic_counts, aes(x = reorder(therapeutic_area, -total_drugs), y = total_drugs)) +
  geom_bar(stat = "identity", fill = "#69b3a2", width = 0.6) +
  labs(x = "Therapeutic Area", y = "Number of Drugs", title = "Top 10 Therapeutic Areas") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
        plot.title = element_text(size = 18, face = "bold"),
        axis.title = element_text(size = 14, face = "bold"),
        panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(),
        panel.border = element_blank(),
        axis.line = element_line(color = "black"),
        legend.position = "none") +
  coord_flip()


```



